#include <iostream>
using namespace std;

int mergeAndCount(int arr[], int l, int m, int r){
    int n1=m-l+1, n2=r-m;
    int L[n1], R[n2];
    for(int i=0;i<n1;i++) L[i]=arr[l+i];
    for(int j=0;j<n2;j++) R[j]=arr[m+1+j];
    int i=0,j=0,k=l,count=0;
    while(i<n1 && j<n2){
        if(L[i]<=R[j]) arr[k++]=L[i++];
        else{
            arr[k++]=R[j++];
            count+=n1-i;
        }
    }
    while(i<n1) arr[k++]=L[i++];
    while(j<n2) arr[k++]=R[j++];
    return count;
}

int mergeSortCount(int arr[], int l, int r){
    int count=0;
    if(l<r){
        int m=l+(r-l)/2;
        count+=mergeSortCount(arr,l,m);
        count+=mergeSortCount(arr,m+1,r);
        count+=mergeAndCount(arr,l,m,r);
    }
    return count;
}

int main(){
    int arr[]={1,20,6,4,5};
    int n=5;
    cout<<"NÃºmero de inversiones: "<<mergeSortCount(arr,0,n-1);
    return 0;
}
