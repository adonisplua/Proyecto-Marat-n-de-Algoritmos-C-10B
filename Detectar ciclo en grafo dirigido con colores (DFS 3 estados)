#include <iostream>
#include <vector>
using namespace std;

bool dfsCycleColor(int u, vector<vector<int>>& adj, vector<int>& color){
    color[u]=1;
    for(int v: adj[u]){
        if(color[v]==1) return true;
        if(color[v]==0 && dfsCycleColor(v,adj,color)) return true;
    }
    color[u]=2;
    return false;
}

bool hasCycle(vector<vector<int>>& adj){
    int n=adj.size();
    vector<int> color(n,0);
    for(int i=0;i<n;i++)
        if(color[i]==0 && dfsCycleColor(i,adj,color)) return true;
    return false;
}

int main(){
    vector<vector<int>> adj={{1},{2},{0,3},{4},{}};
    cout<<"¿Tiene ciclo? "<<(hasCycle(adj)?"Sí":"No")<<endl;
    return 0;
}
