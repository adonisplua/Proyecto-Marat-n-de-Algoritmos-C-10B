#include <iostream>
#include <vector>
#include <queue>
using namespace std;

void shortestPathUnweighted(vector<vector<int>>& adj, int src){
    int n=adj.size();
    vector<int> dist(n,-1);
    queue<int> q;
    dist[src]=0;
    q.push(src);
    while(!q.empty()){
        int u=q.front(); q.pop();
        for(int v: adj[u])
            if(dist[v]==-1){
                dist[v]=dist[u]+1;
                q.push(v);
            }
    }
    cout<<"Distancias desde "<<src<<": ";
    for(int d:dist) cout<<d<<" ";
    cout<<endl;
}

int main(){
    vector<vector<int>> adj={{1,2},{0,3},{0,3},{1,2}};
    shortestPathUnweighted(adj,0);
    return 0;
}
