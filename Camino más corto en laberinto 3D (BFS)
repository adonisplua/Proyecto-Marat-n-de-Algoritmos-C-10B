#include <iostream>
#include <queue>
#include <vector>
using namespace std;

struct Node{int x,y,z,d;};
int dirs[6][3]={{1,0,0},{-1,0,0},{0,1,0},{0,-1,0},{0,0,1},{0,0,-1}};

int shortest3D(vector<vector<vector<int>>>& maze){
    int X=maze.size(),Y=maze[0].size(),Z=maze[0][0].size();
    queue<Node> q; q.push({0,0,0,0});
    vector<vector<vector<bool>>> vis(X,vector<vector<bool>>(Y,vector<bool>(Z,false)));
    vis[0][0][0]=true;
    while(!q.empty()){
        Node cur=q.front(); q.pop();
        if(cur.x==X-1 && cur.y==Y-1 && cur.z==Z-1) return cur.d;
        for(auto &d:dirs){
            int nx=cur.x+d[0], ny=cur.y+d[1], nz=cur.z+d[2];
            if(nx>=0&&ny>=0&&nz>=0&&nx<X&&ny<Y&&nz<Z&&maze[nx][ny][nz]==0&&!vis[nx][ny][nz]){
                vis[nx][ny][nz]=true;
                q.push({nx,ny,nz,cur.d+1});
            }
        }
    }
    return -1;
}

int main(){
    vector<vector<vector<int>>> maze={
        {{0,0,0},{1,1,0},{0,0,0}},
        {{0,1,0},{0,0,0},{1,0,0}},
        {{0,0,0},{0,1,0},{0,0,0}}};
    cout<<"Camino mÃ­nimo en 3D: "<<shortest3D(maze)<<endl;
    return 0;
}
