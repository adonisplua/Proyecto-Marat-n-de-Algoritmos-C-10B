#include <iostream>
#include <memory>
#include <chrono>
using namespace std;
using namespace std::chrono;

int main() {
    const int N = 1000000;

    auto start1 = high_resolution_clock::now();
    for (int i = 0; i < N; i++) {
        int* p = new int(i);
        delete p;
    }
    auto end1 = high_resolution_clock::now();

    auto start2 = high_resolution_clock::now();
    for (int i = 0; i < N; i++) {
        auto p = make_unique<int>(i);
    }
    auto end2 = high_resolution_clock::now();

    cout << "Raw pointers: " 
         << duration_cast<milliseconds>(end1 - start1).count() << " ms\n";
    cout << "Smart pointers: " 
         << duration_cast<milliseconds>(end2 - start2).count() << " ms\n";
    return 0;
}
