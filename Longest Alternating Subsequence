#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int longestAlternating(vector<int>& arr){
    int n=arr.size();
    vector<int> up(n,1), down(n,1);
    for(int i=1;i<n;i++){
        for(int j=0;j<i;j++){
            if(arr[i]>arr[j]) up[i]=max(up[i], down[j]+1);
            else if(arr[i]<arr[j]) down[i]=max(down[i], up[j]+1);
        }
    }
    return max(*max_element(up.begin(),up.end()), *max_element(down.begin(),down.end()));
}

int main(){
    vector<int> arr={1,5,4};
    cout<<"Longest alternating subsequence: "<<longestAlternating(arr)<<endl;
    return 0;
}
