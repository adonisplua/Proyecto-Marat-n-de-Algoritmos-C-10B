#include <iostream>
#include <vector>
#include <queue>
using namespace std;

struct Element{
    int val, arrIdx, idx;
    bool operator>(const Element& e) const { return val>e.val; }
};

vector<int> mergeKSortedArrays(vector<vector<int>> &arrays){
    priority_queue<Element, vector<Element>, greater<Element>> pq;
    for(int i=0;i<arrays.size();i++)
        if(!arrays[i].empty()) pq.push({arrays[i][0], i, 0});
    vector<int> res;
    while(!pq.empty()){
        Element e=pq.top(); pq.pop();
        res.push_back(e.val);
        if(e.idx+1<arrays[e.arrIdx].size()) pq.push({arrays[e.arrIdx][e.idx+1], e.arrIdx, e.idx+1});
    }
    return res;
}

int main(){
    vector<vector<int>> arrays={{1,4,5},{1,3,4},{2,6}};
    vector<int> result=mergeKSortedArrays(arrays);
    for(int x:result) cout<<x<<" ";
    return 0;
}
