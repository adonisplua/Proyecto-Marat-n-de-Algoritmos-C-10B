#include <iostream>
#include <vector>
#include <queue>
using namespace std;

vector<int> topoSort(vector<vector<int>>& adj){
    int n=adj.size();
    vector<int> indeg(n,0);
    for(int i=0;i<n;i++) for(int v:adj[i]) indeg[v]++;
    queue<int> q; for(int i=0;i<n;i++) if(indeg[i]==0) q.push(i);
    vector<int> order;
    while(!q.empty()){
        int u=q.front(); q.pop();
        order.push_back(u);
        for(int v:adj[u]) if(--indeg[v]==0) q.push(v);
    }
    return order;
}

void countPathsAll(vector<vector<int>>& adj){
    int n=adj.size();
    vector<int> topo=topoSort(adj);
    vector<vector<int>> dp(n, vector<int>(n,0));
    for(int i=0;i<n;i++) dp[i][i]=1;
    for(int u: topo)
        for(int v: adj[u])
            for(int i=0;i<n;i++)
                dp[i][v]+=dp[i][u];
    cout<<"NÃºmero de caminos entre pares:\n";
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++) cout<<dp[i][j]<<" ";
        cout<<endl;
    }
}

int main(){
    vector<vector<int>> adj={{1,2},{3},{3},{}};
    countPathsAll(adj);
    return 0;
}
