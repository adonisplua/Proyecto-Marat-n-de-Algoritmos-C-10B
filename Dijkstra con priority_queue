#include <iostream>
#include <vector>
#include <queue>
using namespace std;

void dijkstra(int s, vector<vector<pair<int,int>>>& adj){
    int n = adj.size();
    vector<int> dist(n, 1e9);
    dist[s]=0;
    priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
    pq.push({0,s});

    while(!pq.empty()){
        auto [d,u]=pq.top(); pq.pop();
        if(d>dist[u]) continue;
        for(auto [v,w]: adj[u]){
            if(dist[u]+w<dist[v]){
                dist[v]=dist[u]+w;
                pq.push({dist[v],v});
            }
        }
    }

    for(int i=0;i<n;i++) cout << "Distancia a " << i << ": " << dist[i] << endl;
}

int main() {
    vector<vector<pair<int,int>>> adj(5);
    adj[0]={{1,2},{2,4}};
    adj[1]={{2,1},{3,7}};
    adj[2]={{4,3}};
    adj[3]={{4,1}};
    adj[4]={};

    dijkstra(0,adj);
    return 0;
}
