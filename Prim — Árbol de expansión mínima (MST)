#include <iostream>
#include <vector>
#include <queue>
#include <climits>
using namespace std;

void prim(vector<vector<pair<int,int>>>& adj){
    int n=adj.size();
    vector<int> key(n,INT_MAX), parent(n,-1);
    vector<bool> inMST(n,false);
    key[0]=0;
    priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
    pq.push({0,0});

    while(!pq.empty()){
        int u=pq.top().second; pq.pop();
        inMST[u]=true;
        for(auto [v,w]: adj[u])
            if(!inMST[v] && w<key[v]){
                key[v]=w;
                parent[v]=u;
                pq.push({key[v],v});
            }
    }

    cout<<"Aristas MST (Prim):\n";
    for(int i=1;i<n;i++)
        cout<<parent[i]<<" - "<<i<<" ("<<key[i]<<")\n";
}

int main(){
    int n=5;
    vector<vector<pair<int,int>>> adj(n);
    adj[0]={{1,2},{3,6}};
    adj[1]={{0,2},{2,3},{3,8},{4,5}};
    adj[2]={{1,3},{4,7}};
    adj[3]={{0,6},{1,8}};
    adj[4]={{1,5},{2,7}};
    prim(adj);
    return 0;
}
