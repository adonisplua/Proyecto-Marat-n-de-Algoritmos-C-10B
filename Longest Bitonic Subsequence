#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int longestBitonic(vector<int>& arr){
    int n=arr.size();
    vector<int> lis(n,1), lds(n,1);
    for(int i=1;i<n;i++)
        for(int j=0;j<i;j++)
            if(arr[i]>arr[j]) lis[i]=max(lis[i], lis[j]+1);
    for(int i=n-2;i>=0;i--)
        for(int j=n-1;j>i;j--)
            if(arr[i]>arr[j]) lds[i]=max(lds[i], lds[j]+1);
    int max_len=0;
    for(int i=0;i<n;i++) max_len=max(max_len, lis[i]+lds[i]-1);
    return max_len;
}

int main(){
    vector<int> arr={1,11,2,10,4,5,2,1};
    cout<<"LBS length: "<<longestBitonic(arr)<<endl;
    return 0;
}
